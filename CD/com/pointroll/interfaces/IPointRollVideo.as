package com.pointroll.interfaces{	import PointRollAPI_AS3.media.PrVideo;	import flash.events.IEventDispatcher;		public interface IPointRollVideo extends IEventDispatcher{		function playVideo():void;		function pauseVideo():void;		function killVideoStream():void;		function replayVideo():void;		function resetMileStones():void;		function restartVideo(sound:Boolean = false):void;		function seekVideo(n:Number):void;		function startVideoPlay(baseName:String, lenInSecs:Number, instanceNum:Number, videoVolume:Number, hd:uint=NaN):void;		function stopVideo():void;			function restartWithAudio():void;		function restartForcedVideo():void;		function resetMilestones():void;				// Getters & Setters		function set autoVideoKill(b:Boolean):void;		function set optionalMileStones(a:Array):void;		function set trackVideoEvents(b:Boolean):void;		function set videoVolume(n:Number):void;		function set deliveryType(n:Number):void;		function set videoBuffer(n:Number):void;		function set videoForceBuffer(n:Number):void;				function get videoVolume():Number;		function get instance():PrVideo		function get isVideoPlaying():Boolean;	}	}