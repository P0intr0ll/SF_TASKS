package com.pointroll.ui{	import flash.display.Sprite;	import flash.display.DisplayObjectContainer;	import flash.display.MovieClip;	import flash.display.Shape;	import flash.display.Loader;	import flash.text.TextField;	import flash.text.TextFormat;		import flash.net.URLRequest;	import flash.events.MouseEvent;	import flash.events.Event;	import flash.events.IOErrorEvent;		import com.pointroll.abstract.PointRollAbstractUI;		import com.pointroll.utils.PointRollUtils;	import com.pointroll.events.PRUIEvents;		import com.pointroll.data.MatchUpData;	import com.pointroll.text.PRText;		import pointroll.trackNonUIActivityWithNoun;		import com.pointroll.events.PRDataScrapeEvents;			import com.pointroll.api.utils.net.returnHttpProtocol;		public class PointRollBannerUI_300 extends PointRollAbstractUI {		private var _timeline:DisplayObjectContainer;				private var _noun:String;		//private var _animation:PRAnimation;		private var _loader:Loader;		// stage elements		private var _cta:MovieClip;		private var _dynamicTxt:MovieClip;		private var _clickTag:Sprite;						private var _prText:PRText;		public function PointRollBannerUI_300(timeline:DisplayObjectContainer) {			_timeline = timeline;			super(timeline);		}		override public function init():void{			_cta = _timeline.getChildByName("cta") as MovieClip;			_dynamicTxt = _timeline.getChildByName("dynamicTxt") as MovieClip;		}		override public function buildUI(...args):void {			//getMatchUpCopy(concept:String, scrabbedVariable:String)									if (args[1] == PRDataScrapeEvents.ON_DATA_SCRAPE_FAIL) {				trace("\n buildUI -- ON_DATA_SCRAPE_FAIL " )				_loader = new Loader();				_loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onLoaderEvent);				_loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, onLoaderEvent);				_loader.load(new URLRequest(returnHttpProtocol(args[2]+".jpg")));								pointroll.trackNonUIActivityWithNoun(100001, "GracefulFail");									_noun = "GracefulFail";			}else {				trace("\n buildUI 300 TEXT -- ON_DATA_SCRAPE_LOAD _timeline.stage.stageWidth: " + _timeline.stage.stageWidth) 				//var _copy:Array = MatchUpData.getMatchUpCopy(args[0].NoValue, args[1]).split("|"); 				var _copy:Array											_copy = MatchUpData.getMatchUpCopy(args[0].NoValue + "300", args[1]).split("|"); 								 				 				var _noise:MovieClip = new MovieClip();				var _mask:MovieClip = new MovieClip()				var _rectangle:Shape;				var smallest:uint = 21;				_noun = MatchUpData.getTipNumber(args[0].NoValue, args[1]);							pointroll.trackNonUIActivityWithNoun(100001, _noun);							_prText = new PRText();				_cta.addEventListener(MouseEvent.CLICK, onUIEvent);				_cta.addEventListener(MouseEvent.ROLL_OVER, onUIEvent);				_cta.addEventListener(MouseEvent.ROLL_OUT, onUIEvent);												//trace("\n _copy.length: " + _copy.length)				var fmt:TextFormat = new TextFormat();					fmt.size = smallest							_prText.createTextFormat({p:"font",v:new Hermes().fontName},{p:"size",v:21},{p:"bold",v:true});						_prText.createTextField(_copy[0],true,{p:"name",v:"headline1"},{p:"width",v:420},{p:"embedFonts",v:true});				//PointRollUtils.autoSize(_prText._txtField, _prText._txtField.width, _prText._txtField.textHeight)				_dynamicTxt.copy.addChild(_prText._txtField); 								_prText.createTextField(_copy[0],true,{p:"name",v:"headline1Copy"},{p:"width",v:420},{p:"embedFonts",v:true});						//PointRollUtils.autoSize(_prText._txtField, _prText._txtField.width, _prText._txtField.textHeight)				_mask.addChild(_prText._txtField);														_prText.createTextFormat({p:"font",v:new Hermes().fontName},{p:"size",v:21},{p:"bold",v:true});						_prText.createTextField(_copy[1],false,{p:"name",v:"headline2"},{p:"width",v:420},									{p:"embedFonts",v:true},{p:"textColor",v:0xFFFFFF});				//PointRollUtils.autoSize(_prText._txtField, _prText._txtField.width, _prText._txtField.textHeight)																	_prText._txtField.y = _dynamicTxt.copy.getChildByName("headline1").textHeight + _dynamicTxt.copy.getChildByName("headline1").y;					_dynamicTxt.copy.addChild(_prText._txtField); 				_prText.createTextField(_copy[1],false,{p:"name",v:"headline2Copy"},{p:"width",v:420},									{p:"embedFonts",v:true},{p:"textColor",v:0xFFFFFF});				//PointRollUtils.autoSize(_prText._txtField, _prText._txtField.width, _prText._txtField.textHeight)				_prText._txtField.y = _dynamicTxt.copy.getChildByName("headline1").textHeight + _dynamicTxt.copy.getChildByName("headline1").y;								_mask.addChild(_prText._txtField);								if (_copy.length >2 ) 				{ 				_prText.createTextField(_copy[2],false,{p:"name",v:"headline2"},{p:"width",v:420},									{p:"embedFonts",v:true},{p:"textColor",v:0xFFFFFF});				//PointRollUtils.autoSize(_prText._txtField, _prText._txtField.width, _prText._txtField.textHeight)								_prText._txtField.y = _dynamicTxt.copy.getChildByName("headline2").textHeight + _dynamicTxt.copy.getChildByName("headline2").y;					_dynamicTxt.copy.addChild(_prText._txtField); 									_dynamicTxt.copy.y = 15 - ((_dynamicTxt.copy.getChildByName("headline1").textHeight +										_dynamicTxt.copy.getChildByName("headline2").textHeight)/2)				}else 				{					_dynamicTxt.copy.y = 45 - ((_dynamicTxt.copy.getChildByName("headline1").textHeight +										_dynamicTxt.copy.getChildByName("headline2").textHeight)/2)				}								 															_rectangle = new Shape();				_rectangle.graphics.drawRect(0,0,_dynamicTxt.copy.width,_dynamicTxt.copy.getChildByName("headline1").textHeight +										_dynamicTxt.copy.getChildByName("headline2").textHeight);														_noise.x = _dynamicTxt.copy.x;				_noise.y = _dynamicTxt.copy.y;				_noise.alpha = .15;				_noise.addChild(_rectangle);															PointRollUtils.addNoise(_noise, _noise.width, _noise.height);				_mask.x = _noise.x;				_mask.y = _noise.y;				_dynamicTxt.addChild(_noise);				_dynamicTxt.addChild(_mask);				_noise.mask = _mask;			}						_clickTag = PointRollUtils.createClickTag(0,0,getUIWidth(),getUIHeight(),0);			_clickTag.name = "clickTag";			_clickTag.buttonMode = _clickTag.useHandCursor = true;			_clickTag.addEventListener(MouseEvent.CLICK, onUIEvent);			_clickTag.addEventListener(MouseEvent.ROLL_OVER, onUIEvent);			_clickTag.addEventListener(MouseEvent.ROLL_OUT, onUIEvent);			_timeline.addChild(_clickTag);					}						//EVENTS		private function onUIEvent(e:MouseEvent):void {			//trace(e.currentTarget.name);			var _dataObject:Object = new Object();			switch(e.type){				case MouseEvent.CLICK:								 _dataObject.currentTarget = e.currentTarget;					 _dataObject.noun = _noun;					 dispatchEvent(new PRUIEvents(PRUIEvents.ON_UI_EVENT, _dataObject));								break;				case MouseEvent.ROLL_OVER:					 _cta.gotoAndPlay("over");				break;				case MouseEvent.ROLL_OUT:					 _cta.gotoAndPlay("out");				break;			}		}		private function onLoaderEvent(e:Object):void{			switch(e.type){				case Event.COMPLETE:					 _timeline.addChild(_loader.content);					 _clickTag.removeEventListener(MouseEvent.ROLL_OVER, onUIEvent);					 _clickTag.removeEventListener(MouseEvent.ROLL_OUT, onUIEvent);					 _timeline.removeChild(_clickTag);					 _timeline.addChild(_clickTag);				break;				case IOErrorEvent.IO_ERROR:					 trace("ERROR:: Can't find static backup file")				break;			}			_loader.contentLoaderInfo.removeEventListener(Event.COMPLETE, onLoaderEvent);			_loader.contentLoaderInfo.removeEventListener(IOErrorEvent.IO_ERROR, onLoaderEvent);		}		// toString		public function printAdSize():void{			trace("Creative Size: " + getUIWidth() +"x"+getUIHeight());			}	}}