package com.pointroll.paperboy{	import flash.events.EventDispatcher;	import com.pointroll.paperboy.Product;	import flash.display.MovieClip;	import com.pointroll.paperboy.events.ProductEvents;	import flash.events.Event;	import flash.display.Sprite;	import com.pointroll.utils.PrUtils;	import com.pointroll.utils.fitText;		import flash.text.TextField;	import flash.text.TextFormat;	public class ProductBuilder extends Sprite {		private var _productData:XMLList;				private var _productHolder:MovieClip;		private var _totalProducts:int;		private var _productCount:int = 0;		private var _textPadding:int = 10;				public var _products:Array;		public function ProductBuilder(xmlData:XMLList, container:MovieClip) {			_productData = xmlData;			_productHolder = container;		}		//public function add		public function buildProducts():void {			_totalProducts = _productData.length();			_products = new Array();			if (hasChildren) {				removeChildren();			}			var underlinedText = new TextFormat();			underlinedText.underline=true;			for (var i:int = 0; i < _totalProducts; i++) {				_products[i] = new Product();				_products[i].buildProductData(XMLList(_productData[i]));				_products[i].imageHolder = _products[i].holder;				//_products[i].setProductImage(_products[i].getProductDataField("image"));				_products[i].setProductImage(PrUtils.requestSizedImage(_products[i].getProductDataField("image"),160, 120));				if(_products[i].getProductDataField("price").length){					_products[i].setProductTextField("price", _products[i].getProductDataField("price"),"CENTER",false);					PrUtils.shortenWithEllipsis(_products[i].getStageObject("price"),90);					//fitText(_products[i].getStageObject("price"),1,9);				}				_products[i].setProductTextField("description", _products[i].getProductDataField("title"),"CENTER",true);				PrUtils.shortenWithEllipsis(_products[i].getStageObject("description"),100);				//fitText(_products[i].getStageObject("description"),2,9);				_products[i].getStageObject("description").setTextFormat(underlinedText);				_products[i].alignText(_products[i].getStageObject("description"),_products[i].getStageObject("price"));				_productHolder.addChild(_products[i]);				_products[i].y = _productCount * _products[i].width;				_products[i].addEventListener(ProductEvents.ON_PRODUCT_CLICK, onProductClick);				_products[i].addEventListener("onProductImageLoad",onProductImageLoad);				_productCount++;			}			dispatchEvent(new Event("onProductBuilderComplete"));		}		private function removeChildren():void {			while (_productHolder.numChildren > 0) {				_productHolder.removeChildAt(0);			}		}		// EVENTS		private function onProductClick(e:ProductEvents):void {			//trace("onProductClick: " + e.params["image"]);			dispatchEvent(e);		}		private function onProductImageLoad(e:Event):void {			if (e.target.getStageObject("holder").height >= 100) {				if (e.target.getProductDataField("price")) {					e.target.getStageObject("description").y = e.target.getStageObject("holder").height + e.target.getStageObject("holder").y;					e.target.getStageObject("price").y = e.target.getStageObject("description").height + e.target.getStageObject("description").y;					//e.target.getStageObject("seeDetails").y = e.target.getStageObject("price").textHeight + e.target.getStageObject("price").y;				}				else {					e.target.getStageObject("description").y = e.target.getStageObject("holder").height + e.target.getStageObject("holder").y + _textPadding;					//e.target.getStageObject("seeDetails").y = e.target.getStageObject("description").textHeight + e.target.getStageObject("description").y + _textPadding;				}			}		}		// GETTERS & SETTERS		public function get totalProducts():int {			return _productCount;		}		public function get hasChildren():Boolean {			trace("hasChildren " + _productHolder.numChildren);			if (_productHolder.numChildren) {				return true;			}			return false;		}	}}