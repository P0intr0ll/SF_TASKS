package com.pointroll.utils{	import flash.display.Sprite;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.BitmapDataChannel;	import flash.display.MovieClip;	import flash.geom.Rectangle;	public class PointRollUtils {		public static function createClickTag(x:Number=0,y:Number=0,width:Number=10,height:Number=10,alpha:Number=1,color:uint=0x000000):Sprite {			var button:Sprite = new Sprite();			button.graphics.beginFill(color);			button.graphics.drawRect(x,y,width,height);			button.graphics.endFill();			button.alpha = alpha;			return button;		}		public static function autoSize(txt:TextField, maxWidth:int, maxHeight:int):void {			var maxTextWidth:int = maxWidth;			var maxTextHeight:int = maxHeight;			var f:TextFormat = txt.getTextFormat();			while (txt.textWidth > maxTextWidth || txt.textHeight > maxTextHeight) {				f.size = int(f.size) - 1;				txt.setTextFormat(f);			}		}		public static function addNoise(target:MovieClip, h:Number, w:Number):void {			var bitmap_data = new BitmapData(h,w);			var bm:Bitmap = new Bitmap(bitmap_data);			target.addChild(bm);			bitmap_data.noise(Math.floor(1000*Math.random()), 40, 255, 1|2|4, true);		}		public static function duplicateMC(mc, mc2) {			var mcBMPD:BitmapData = new BitmapData(mc.width,mc.height,false,0x000000);			var mcBMP:Bitmap = new Bitmap(mcBMPD);			mcBMPD.draw(mc);			mc2.addChild(mcBMP);		}	}}