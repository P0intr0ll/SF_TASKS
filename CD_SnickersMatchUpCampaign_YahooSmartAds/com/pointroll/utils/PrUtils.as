package com.pointroll.utils{	import flash.text.TextField;	import flash.text.TextFormat;	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.EventDispatcher;	public class PrUtils extends EventDispatcher {		public function PrUtils() {			// constructor code		}		public static function shrinkTextToFit(tf:TextField, str:String):void {			var maxTextWidth:int = tf.width;			var maxTextHeight:int = tf.height;			var f:TextFormat;			tf.text = str;			f = tf.getTextFormat();			if (tf.multiline) {				while (tf.textHeight > maxTextHeight) {					f.size = int(f.size) - 1;					tf.setTextFormat(f);				}			}			else {				while (tf.textWidth > maxTextWidth) {					f.size = int(f.size) - 1;					tf.setTextFormat(f);				}			}			f.size = int(f.size) - 1;			tf.setTextFormat(f);		}		public static function resizeTextField(tf:TextField):void {			var maxTextWidth:int = tf.width;			var maxTextHeight:int = tf.height;			var f:TextFormat = tf.getTextFormat();			//decrease font size until the text fits  			while (tf.textWidth > maxTextWidth || tf.textHeight > maxTextHeight) {				f.size = int(f.size) - 1;				tf.setTextFormat(f);			}		}		public static function truncateTextToFit(tf:TextField, str:String):void {			var origWidth:Number = tf.width;			var origHeight:Number = tf.height;			tf.text = str;			if (tf.multiline) {				while (tf.textHeight>origHeight) {					tf.text = tf.text.slice(0,tf.text.length - 2) + "…";					tf.text = tf.text.substr(0,tf.text.lastIndexOf(' ')) + "…";				}			}			else {				while (tf.textWidth > origWidth) {					tf.text = tf.text.slice(0,tf.text.length - 2) + "…";					tf.text = tf.text.substr(0,tf.text.lastIndexOf(' ')) + "…";				}			}		}		public static function alightTextVertically(t1:TextField, t2:TextField, padding:Number = 0):void {			t2.y = t1.y + t1.textHeight + padding;		}		private static function replaceString(str:String,re:RegExp,replacement:String):String {			return str.replace(re, replacement);		}		public static function scaleImageProportionally(image:MovieClip,maxW:int,maxH:int):void {			var ratio:Number = image.height / image.width;			if (image.width > maxW) {				image.width = maxW;				image.height = Math.round(image.width * ratio);			}			if (image.height > maxH) {				image.height = maxH;				image.width = Math.round(image.height / ratio);			}			//dispatchEvent(new Event("onScaledImage"));		}		public static function getMMDDYY():String {			var dateObj:Date = new Date();			var year:String = String(dateObj.getFullYear());			var month:String = String(dateObj.getMonth() + 1);			if (month.length == 1) {				month = "0" + month;			}			var date:String = String(dateObj.getDate());			if (date.length == 1) {				date = "0" + date;			}			return month+date+year.substring(2, 4);		}	}}